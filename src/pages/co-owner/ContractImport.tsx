import React, { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { toast } from "@/hooks/use-toast";

interface ContractImportProps {
  onFinish: (data: any) => void;
}

const ContractImport: React.FC<ContractImportProps> = ({ onFinish }) => {
  const [file, setFile] = useState<File | null>(null);
  const [isUploading, setIsUploading] = useState(false);

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const selected = e.target.files?.[0];
    if (!selected) return;

    const isPDF = selected.type === "application/pdf";
    const isImage = selected.type.startsWith("image/");

    console.log("üìÇ File selected:", selected);

    if (!isPDF && !isImage) {
      toast({
        title: "L·ªói ƒë·ªãnh d·∫°ng",
        description: "Ch·ªâ ch·∫•p nh·∫≠n file PDF ho·∫∑c h√¨nh ·∫£nh (JPG, PNG)",
        variant: "destructive",
      });
      return;
    }

    setFile(selected);
  };

  const handleUpload = async () => {
    if (!file) {
      toast({
        title: "Thi·∫øu file",
        description: "Vui l√≤ng ch·ªçn file tr∆∞·ªõc khi ti·∫øp t·ª•c.",
        variant: "destructive",
      });
      return;
    }

    setIsUploading(true);
    console.log("üöÄ Upload started for:", file.name);

    try {
      const isPDF = file.type === "application/pdf";
      const isImage = file.type.startsWith("image/");

      console.log("üìé File type:", isPDF ? "PDF" : isImage ? "IMAGE" : "UNKNOWN");

      // ‚úÖ Ch·ªâ g·ª≠i c·∫•u tr√∫c, staff x√©t duy·ªát n·ªôi dung
      onFinish({
        uploadType: isPDF ? "PDF" : "IMAGE",
        contractType: "VEHICLE_OWNERSHIP",
        file,
      });

      toast({
        title: "T·∫£i l√™n th√†nh c√¥ng ‚úÖ",
        description: isPDF
          ? "ƒê√£ nh·∫≠n file PDF, chuy·ªÉn t·ªõi b∆∞·ªõc x√°c nh·∫≠n"
          : "ƒê√£ nh·∫≠n ·∫£nh h·ª£p ƒë·ªìng",
      });
    } catch (err) {
      console.error("‚ùå Upload error:", err);
      toast({
        title: "L·ªói",
        description: "Kh√¥ng th·ªÉ x·ª≠ l√Ω file, th·ª≠ l·∫°i nh√©!",
        variant: "destructive",
      });
    } finally {
      console.log("‚úÖ Upload process finished.");
      setIsUploading(false);
    }
  };

  return (
    <Card className="p-4 border rounded-lg shadow-sm">
      <CardContent className="flex flex-col gap-4">
        <input
          type="file"
          accept=".pdf,image/*"
          onChange={handleFileChange}
          className="block w-full border rounded p-2"
        />

        {file && (
          <p className="text-sm text-gray-600">
            ƒê√£ ch·ªçn: <strong>{file.name}</strong>
          </p>
        )}

        <Button disabled={isUploading} onClick={handleUpload} className="w-fit">
          {isUploading ? "ƒêang x·ª≠ l√Ω..." : "T·∫£i l√™n & Ti·∫øp t·ª•c"}
        </Button>
      </CardContent>
    </Card>
  );
};

export default ContractImport;
